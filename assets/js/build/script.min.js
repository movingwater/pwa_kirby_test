!function(e){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?e(require("knockout"),require("markdown-it")):"function"==typeof define&&define.amd?define(["knockout"],["markdown-it"],e):e(ko,markdownit)}(function(e,n){e.markdown=n(),e.bindingHandlers.markdown={update:function(n,r,t){var o=t(),i=o.markdown,a=e.unwrap(i);n.innerHTML=e.markdown.render(a)}}});var Page=function(){function e(){var e=this;e.arrivals=ko.observableArray([])}return{vm:new e,hideOfflineWarning:function(){document.querySelector(".arrivals-list").classList.remove("loading"),document.getElementById("offline").remove()},showOfflineWarning:function(){document.querySelector(".arrivals-list").classList.add("loading");var e=new XMLHttpRequest;e.open("GET","./assets/offline.html",!0),e.onload=function(){if(200===e.status){var n=document.createElement("div");n.setAttribute("id","offline"),n.innerHTML=e.responseText,document.getElementById("main").appendChild(n)}else console.warn("Error retrieving offline.html")},e.onerror=function(){console.error("Connection error")},e.send()}}}(),Arrivals=function(){function e(){var e=this;e.title="",e.text="",e.url="",e.image=""}function n(){var e=this;e.getAll=function(){return new Promise(function(e,n){var r=new XMLHttpRequest;r.open("GET","./projects/api"),r.onload=function(){200===r.status?e(JSON.parse(r.response)):n(Error(r.statusText))},r.onerror=function(){n(Error("Network Error"))},r.send()})}}function r(){var n=this;n.toArrivalViewModel=function(n){if(n){var r=new e;return r.title=n.title,r.text=n.text,r.url=n.url,r.image=n.image,r}return null},n.toArrivalViewModels=function(e){return e&&e.length>0?e.map(function(e){return n.toArrivalViewModel(e)}):[]}}function t(e,n){var r=this;r.getAll=function(){return e.getAll().then(function(e){return n.toArrivalViewModels(e)})}}var o=new n,i=new r,a=new t(o,i);return{loadData:function(){document.querySelector(".arrivals-list").classList.add("loading"),a.getAll().then(function(e){Page.vm.arrivals(e),document.querySelector(".arrivals-list").classList.remove("loading")})}}}();"serviceWorker"in navigator&&navigator.serviceWorker.register("./sw.js").then(function(e){console.log("Successfully registered service worker",e)}).catch(function(e){console.warn("Error whilst registering service worker",e)}),window.addEventListener("online",function(e){console.log("You are online"),Page.hideOfflineWarning(),Arrivals.loadData()},!1),window.addEventListener("offline",function(e){console.log("You are offline"),Page.showOfflineWarning()},!1),navigator.onLine?Arrivals.loadData():Page.showOfflineWarning(),ko.applyBindings(Page.vm);